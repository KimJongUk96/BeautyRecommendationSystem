<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.brs.mapper.UserProductMapper">

	<!-- 높은 별점 순으로 리스트 default -->
	<select id="listSearch"
		resultType="com.brs.domain.product.ProductVO">
	<![CDATA[  
	select * from(
    select rownum rnum, prod_no, name, comp_name, img, rating_avg, 
                  prodtype_name, category_name, price, regdate, count
      from (select pv.prod_no, pv.name, pv.comp_name, pv.img, pv.prodtype_name, pv.category_name, pv.price, pv.regdate,
		           nvl(rt.rating_avg,0) as rating_avg, nvl(cv.count,0) as count
			 from product_view pv 
  left outer join rating_avg_view rt on pv.prod_no = rt.prod_no
  left outer join count_review_view cv on pv.prod_no = cv.prod_no
	]]>
	<![CDATA[
		order by
	]]>
  		<include refid="search2"></include>
	<![CDATA[ 			 
	 			 rating_avg desc 
	]]>
  
	<![CDATA[   
	 	)
	 ]]>
	 	<include refid="search"></include>
	<![CDATA[	
	 	) where (rnum >= #{pageStart} AND rnum <= #{pageEnd})
	]]>
		
	</select>



	<select id="listSearchCount" resultType="int">
	<![CDATA[  
 	select count(prod_no) 
 	  from (select pv.prod_no, pv.name, pv.comp_name, pv.img, pv.prodtype_name, pv.category_name, pv.price, pv.regdate,
				   nvl(rt.rating_avg,0) as rating_avg, nvl(cv.count,0) as count
			  from product_view pv 
    left outer join rating_avg_view rt on pv.prod_no = rt.prod_no
    left outer join count_review_view cv on pv.prod_no = cv.prod_no
           order by rating_avg desc
     )
	]]>
		<include refid="search"></include>
	
	</select>


	<sql id="search">
		<if test="searchType != null">
			<if test="searchType == 'n'.toString()">
			</if>
			<if test="searchType == 'pn'.toString()">
				where NAME like '%' || #{keyword} || '%'
			</if>
			<if test="searchType == 'cn'.toString()">
				where COMP_NAME like '%' || #{keyword} || '%'
			</if>
			<if test="searchType == 'ptn'.toString()">
				where category_name like '%' || #{keyword} || '%'
			</if>
		</if>
	</sql>

	<sql id="search2">
		<if test="listType != null">
			<if test="listType == 'regdate'">
				regdate desc,
			</if>
			<if test="listType == 'rating'">
			</if>
			<if test="listType == 'count'">
				count desc,
			</if>
		</if>
	</sql>




	<!-- <sql id="order"> <if test="order != null"> <if test="order == 'regdate'"> 
		order by regdate desc </if> <if test="order == 'avg'"> order by rating_avg 
		desc </if> <if test="order == 'count'.toString()"> order by count desc </if> 
		</if> </sql> -->


	<select id="read" resultType="com.brs.domain.product.ProductVO">
		select pv.prod_no, pv.name, pv.comp_name, pv.price, prod.link, pv.img, pv.regdate, 
		       pv.category_name, pv.prodtype_name 
		  from product_view pv, tbl_product prod
    	 where prod.prod_no = pv.prod_no 
      	   and pv.prod_no = #{prodNo}
	</select>


	<select id="readReivew"
		resultType="com.brs.domain.review.ReviewVO">
		select us.nick_name as userNickName, us.gender as
		userGender, us.skin_type
		as userSkinType,
		us.age as userAge, re.rating,
		re.review_text, re.regdate
		from tbl_review re, tbl_user us
		where
		us.email = re.email
		and re.prod_no = #{prodNo}
		order by regdate desc
	</select>

	<select id="readReviewRegister"
		resultType="com.brs.domain.review.ReviewVO">
		select prod.prod_no, prod.name, ct.category_name, pt.name
		as prodtype_name
		from tbl_product prod, tbl_prod_type pt, tbl_category
		ct
		where pt.prodtype_no = prod.prodtype_no
		and ct.category_no =
		pt.category_no
		and prod_no = #{prodNo}
	</select>

	<insert id="create">
		insert into tbl_review
		values(SEQ_REVIEW.nextval,
		#{rating}, #{reviewText}, SYSDATE, #{userEmail}, #{command},
		#{prodNo})
	</insert>


</mapper>